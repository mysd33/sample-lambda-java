AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  todo-app

  Sample SAM Template for todo-app

Parameters:
  Stage:
    Type: String
    Default: Prod
  MemorySize:
    Type: Number
    MinValue: 128
    MaxValue: 10240
    Default: 2048 

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    CodeUri: target/todo-app-1.0-aws.jar
    Handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest    
    Timeout: 20    
    Runtime: java17    
    Architectures:
      - x86_64
    MemorySize: !Ref MemorySize      
    # X-Ray
    #Tracing: Active
    # Lambda SnapStart
    SnapStart:
      ApplyOn: PublishedVersions
    AutoPublishAlias: snap         
    Environment:
      Variables:
        # Java Tiered Compilation Optimization
        JAVA_TOOL_OPTIONS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1"         
  #Api:
    # X-Ray
    #TracingEnabled: true
Resources:
# Lambda Function
  GetUsersFunction:
    Type: AWS::Serverless::Function
    Properties:      
      FunctionName: get-user-function   
      Environment:
        Variables:
          # Spring Cloud Function Environment Variable for function to call
          SPRING_CLOUD_FUNCTION_DEFINITION: userGetAPIHandler
      Events:
        UserService:
          Type: Api
          Properties:
            Path: /users/{user_id}
            Method: GET      
            RestApiId: !Ref UserApi 

  PostUsersFunction:
    Type: AWS::Serverless::Function
    Properties:      
      FunctionName: post-user-function   
      Environment:
        Variables:
          # Spring Cloud Function Environment Variable for function to call
          SPRING_CLOUD_FUNCTION_DEFINITION: userPostAPIHandler
      Events:
        UserService:
          Type: Api
          Properties:
            Path: /users
            Method: POST      
            RestApiId: !Ref UserApi 
# Todo API
  GetTodoFunction:
    Type: AWS::Serverless::Function  
    Properties:
      FunctionName: get-todo-function
      Environment:
        Variables:
          # Spring Cloud Function Environment Variable for function to call
          SPRING_CLOUD_FUNCTION_DEFINITION: todoGetAPIHandler
      Events:
        GetEvent:
          Type: Api
          Properties:            
            Path: /todo/{todo_id}
            Method: GET
            RestApiId: !Ref TodoApi
  PostTodoFunction:
    Type: AWS::Serverless::Function 
    Properties:
      FunctionName: post-todo-function
      Environment:
        Variables:
          # Spring Cloud Function Environment Variable for function to call
          SPRING_CLOUD_FUNCTION_DEFINITION: todoPostAPIHandler
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /todo
            Method: POST
            RestApiId: !Ref TodoApi            
# API Gateway
  UserApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: user-api
      StageName: !Sub ${Stage}  
  TodoApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: todo-api
      StageName: !Sub ${Stage}      

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  UserServiceApi:
    Description: API Gateway endpoint URL for Prod stage for UserServiceFunction function
    Value: !Sub "https://${UserApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/users"
  GetUsersFunctionArn:  
    Description:  GetUsersFunction Lambda Function ARN
    Value: !GetAtt GetUsersFunction.Arn
  GetUsersFunctionIamRole:
    Description: Implicit IAM Role created for GetUsersFunction function
    Value: !GetAtt GetUsersFunction.Arn
  PostUsersFunctionArn:  
    Description:  PostUsersFunction Lambda Function ARN
    Value: !GetAtt PostUsersFunction.Arn
  PostUsersFunctionIamRole:
    Description: Implicit IAM Role created for PostUsersFunction function
    Value: !GetAtt PostUsersFunction.Arn
  TodoServiceApi:
    Description: API Gateway endpoint URL for Prod stage for TodoServiceFunction function
    Value: !Sub "https://${TodoApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/todo"
  GetTodoFunctionArn:  
    Description:  GetTodoFunction Lambda Function ARN
    Value: !GetAtt GetTodoFunction.Arn
  GetTodoFunctionIamRole:
    Description: Implicit IAM Role created for GetTodoFunction function
    Value: !GetAtt GetTodoFunction.Arn
  PostTodoFunctionArn:  
    Description:  PostTodoFunction Lambda Function ARN
    Value: !GetAtt PostTodoFunction.Arn
  PostTodoFunctionIamRole:
    Description: Implicit IAM Role created for PostTodoFunction function
    Value: !GetAtt PostTodoFunction.Arn    